apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "ocpp-csms-server.migrationFullname" . }}-migrate
  labels:
    {{- include "ocpp-csms-server.migrationsLabels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 300
  template:
    metadata:
      labels:
        {{- include "ocpp-csms-server.migrationsLabels" . | nindent 6 }}
    spec:
      serviceAccountName: {{ include "ocpp-csms-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      restartPolicy: Never
      containers:
        - name: migrations
          securityContext:
            {{- toYaml .Values.migrations.securityContext | nindent 12 }}
          image: "{{ .Values.migrateImage.repository }}:{{ .Values.migrateImage.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.migrateImage.pullPolicy }}
          resources:
            {{- toYaml .Values.migrations.resources | nindent 12 }}
          env:
            - name: "DATABASE_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ default .Values.migrations.postgres.passwordSecret (printf "%s-postgresql" .Release.Name) }}
                  key: postgres-password
            - name: "DATABASE_URL"
              value: "postgres://{{ default .Values.migrations.postgres.username "postgres" }}:$(DATABASE_PASSWORD)@{{ .Release.Name }}-postgresql.{{ .Release.Namespace }}.svc.cluster.local:5432/postgres"